syntax = "proto3";

package plugin;

import "github.com/planningto/smartsheet/service/base/base.proto";

option java_package = "com.smartsheet.smartsheet.plugin";
option java_multiple_files = true;
option java_outer_classname = "PluginProto";

message UploadKeyRequest{
	oneof provider{
		string providerUUID = 1;
		ProviderDetails providerDetails = 2;
	}
}

message ProviderDetails{
	string providerID = 1;
	string providerName = 2;
}

message UploadKeyResponse{
	base.CallError error = 1;
	string providerUUID = 2;
	string uploadKey = 3;
}

message RegistrationDataRequest{
	base.Caller caller = 1;
	bytes registrationData = 2;
}

message RegistrationDataResponse{
	base.CallError error = 1;
	bytes registrationData = 2;
}

enum ExecStatus {
  SUCCESS = 0;
  FAIL = 1;
  RETRY = 2;
  STOP = 3;
  PAUSE = 4;
  NEED_AUTH = 5;
}

enum OAuthType {
	OAUTH_USER = 0; 
	OAUTH_ORG = 1;
}

message OAuth2Data {
	string access_token = 1;
	string token_type = 2;
	string refresh_token  = 3;
	int32  expires_in = 4;
	string grant_type = 5;
	map<string,string> metadata = 6;
	string redirect_uri = 7;
}

message HTTPResponse {
   map<string, string> headers = 1;
   bytes body = 2;
   int32 HTTPStatus = 3;
}

message OAuth2Session {
	string cookieName = 1;
	string cookieValue = 2;
}

message OAuth2StartRequest {
	base.Caller caller = 1;
	OAuthType oAuthType = 2;
	string state = 3;
	OAuth2Session session = 4;
}

message OAuth2SetupData {
	string oAuth2URL = 1;
	string clientID = 2;
	string scope = 3;
	string state = 4;
	map<string,string> extraParams = 5;
	string redirectURI = 6;
}

message OAuth2StartResponse {
	base.CallError error = 1;
	ExecStatus status = 2;
	OAuth2SetupData setupData = 3;
}	

message OAuth2HandleCodeRequest {
	string code = 1;
	string scope = 2;
	string state = 3;
}

message OAuth2HandleCodeResponse{
	ExecStatus status = 1;
	base.CallError error = 2;
	oneof complete {
		string message = 3;
		string redirectURL = 4;
	}
}

message ParamValue {
	repeated string data = 1;
}

message FunctionRequest{
	base.Caller caller = 1;
	string functionID = 3; 
	bytes inputData = 4;
}

message FunctionResponse{
	ExecStatus status = 1;
	base.CallError error = 2;
	bytes Value = 3;
}

message DeleteKeyRequest{
	string uploadKey = 1;
}

message DeleteKeyResponse{
	base.CallError error = 1;
}

message ListPluginRequest{
	oneof provider{
		string providerUUID = 1;
		string providerID = 2;
	}
}

message ListPluginResponse{
	base.CallError error = 1;
	bytes plugin = 2;
}

message ListFunctionsRequest{
	oneof provider{
		string providerUUID = 1;
		string providerID = 2;
	}
	oneof plugin{
		string pluginUUID = 3;
		string pluginID = 4;
	}
	string category = 5;
}

message ListFunctionsResponse{
	base.CallError error = 1;
	bytes function = 2;
}

message ListUploaderAPIKeyRequest{
	oneof provider{
		string providerUUID = 1;
		string providerID = 2;
	}
}

message ListUploaderAPIKeyResponse{
	base.CallError error = 1;
	UploadKeyResponse uploadKey = 2;
}

message HasOAuth2TokenRequest{
	base.Caller caller = 1;
	OAuthType oAuthType = 2;
}

message HasOAuth2TokenResponse{
	base.CallError error = 1;
	bool exists = 2;
}

service Plugin {
	rpc CreateUploaderAPIKey(UploadKeyRequest) returns (UploadKeyResponse){};
	rpc DeleteUploaderAPIKey(DeleteKeyRequest) returns (DeleteKeyResponse){};

	rpc ListPlugins(ListPluginRequest) returns (stream ListPluginResponse) {};
	rpc ListFunctions(ListFunctionsRequest) returns (stream ListFunctionsResponse) {};
	rpc ListUploaderAPIKey(ListUploaderAPIKeyRequest) returns (stream ListUploaderAPIKeyResponse) {};

	rpc RegisterPlugin(RegistrationDataRequest) returns (RegistrationDataResponse){};
	rpc UnregisterPlugin(RegistrationDataRequest) returns (RegistrationDataResponse){};
	rpc Execute(FunctionRequest) returns (FunctionResponse){};
	rpc StartOAuth2(OAuth2StartRequest) returns (OAuth2StartResponse){};
	rpc HandleOAuth2Code(OAuth2HandleCodeRequest) returns (OAuth2HandleCodeResponse){};
	rpc HasOAuth2Token(HasOAuth2TokenRequest) returns(HasOAuth2TokenResponse){};
}
